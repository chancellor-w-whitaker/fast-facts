body {
  --callout-size: 15px;
}

.bg-eku-maroon {
  background-color: #861f41;
}

.shadow-none {
  box-shadow: none !important;
}

.shadow-sm {
  box-shadow: 0px 2px 1px -1px rgba(0, 0, 0, 0.2),
    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 1px 3px 0px rgba(0, 0, 0, 0.12) !important;
}

.shadow {
  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),
    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12) !important;
}

.shadow-lg {
  box-shadow: 0px 3px 3px -2px rgba(0, 0, 0, 0.2),
    0px 3px 4px 0px rgba(0, 0, 0, 0.14), 0px 1px 8px 0px rgba(0, 0, 0, 0.12) !important;
}

.bd-example-row [class^="col"],
.bd-example-cols [class^="col"] > *,
.bd-example-cssgrid [class*="grid"] > * {
  padding-top: 0.75rem;
  padding-bottom: 0.75rem;
  background-color: rgba(112.520718, 44.062154, 249.437846, 0.15);
  border: 1px solid rgba(112.520718, 44.062154, 249.437846, 0.3);
}

.recharts-surface {
  overflow: visible;
  font-size: 12px;
}

body {
  overflow-y: scroll;
}

.recharts-tooltip-translation {
  transform: translate(-50%, -100%);
}

/* (A) SPEECH BOX */
.speech {
  /* (A1) FONT & COLORS */
  font-size: 1.2em;
  color: #fff;
  background: #a53d38;

  /* (A2) DIMENSIONS */
  padding: 20px;
  border-radius: 10px;
  max-width: 600px;
}

/* (B) USE ::AFTER TO CREATE THE "CALLOUT" */
.speech::after {
  display: block;
  width: 0;
  content: "";
  border: var(--callout-size) solid transparent;
}

/* (C) "CALLOUT" DIRECTIONS */
.speech.up::after {
  border-bottom-color: #a53d38;
  border-top: 0;
}
.speech.down::after {
  border-top-color: #a53d38;
  border-bottom: 0;
}
.speech.left::after {
  border-right-color: #a53d38;
  border-left: 0;
}
.speech.right::after {
  border-left-color: #a53d38;
  border-right: 0;
}

/* (D) POSITION THE CALLOUT */
.speech {
  position: relative;
  /* margin: 30px; */
}
.speech::after {
  position: absolute;
}
.speech.up::after {
  top: calc(-1 * var(--callout-size));
  left: calc(50% - var(--callout-size));
}
.speech.down::after {
  bottom: calc(-1 * var(--callout-size));
  left: calc(50% - var(--callout-size));
}
.speech.left::after {
  left: calc(-1 * var(--callout-size));
  top: calc(50% - var(--callout-size));
}
.speech.right::after {
  right: calc(-1 * var(--callout-size));
  top: calc(50% - var(--callout-size));
}
.speech.down.offset-callout {
  transform: translateY(calc(-1 * var(--callout-size)));
}
